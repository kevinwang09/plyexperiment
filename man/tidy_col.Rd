% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_names_col.R, R/verbs.R
\name{clean_names_col}
\alias{clean_names_col}
\alias{mutate_col}
\alias{rename_col}
\alias{filter_col}
\alias{arrange_col}
\alias{select_col}
\title{Tidying up column data}
\usage{
clean_names_col(object, case = "snake")

mutate_col(object, ...)

rename_col(object, ...)

filter_col(object, ...)

arrange_col(object, ...)

select_col(object, ...)
}
\arguments{
\item{object}{a \linkS4class{SummarizedExperiment} object.}

\item{case}{Case arguments to be passed to the relevant \pkg{janitor} \code{clean_names} function.}

\item{...}{Additional arguments to be passed to the relevant \pkg{dplyr} functions.}
}
\value{
A modified SingleCellExperiment object.

A modified SingleCellExperiment object.
}
\description{
Tidying up column data

Tidy manipulation of SummarizedExperiment objects by column.
}
\details{
The \code{mutate_col} function calls \code{\link{mutate}} to add new column variables to \code{colData(object)}.

The \code{rename_col} function calls \code{\link{rename}} to rename column variables to \code{colData(object)}.

The \code{filter_col} function calls \code{\link{filter}} to subset \code{object} by column, based on the matching elements in rows of \code{colData(object)}.

The \code{arrange_col} function calls \code{\link{arrange}} to order columns by the corresponding variable in \code{colData(object)}.
}
\examples{
y <- matrix(rnorm(2000), ncol=20)
se <- SummarizedExperiment(list(counts=y))
se$CellTypes <- sample(LETTERS, ncol(y), replace=TRUE)
se$cell_Types <- sample(LETTERS, ncol(y), replace=TRUE)
clean_names_col(se)
y <- matrix(rnorm(2000), ncol=20)
se <- SummarizedExperiment(list(counts=y))
se$whee <- sample(LETTERS, ncol(y), replace=TRUE)

(se2 <- mutate_col(se, yay = runif(ncol(y))))

(se3 <- rename_col(se, blah = whee))

(se4 <- filter_col(se, whee == "A"))

(se5 <- arrange_col(se, whee))
}
\author{
Kevin Wang

Davis McCarthy, with some modifications from Aaron Lun
}
